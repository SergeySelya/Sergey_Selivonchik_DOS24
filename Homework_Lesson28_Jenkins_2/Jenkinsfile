pipeline {
    agent any  // Выполняется на любом доступном агенте

    parameters {
        string(name: 'APP_VERSION', defaultValue: '1.0.0', description: 'Версия приложения')
        choice(name: 'ENVIRONMENT', choices: ['dev', 'staging', 'production'], description: 'Окружение для деплоя')
    }

    stages {
        stage('Checkout') {
            steps {
                // Клонируем репозиторий
                git branch: 'master', url: 'https://github.com/thejungwon/docker-webapp-django.git'
            }
        }

        stage('Build') {
            steps {
                script {
                    try {
                        // Запуск сборки приложения с использованием Maven
                        echo "Сборка приложения версии ${params.APP_VERSION}"


                    } catch (Exception e) {
                        currentBuild.result = 'FAILURE'
                        throw e  // Обработка ошибки
                    }
                }
            }
        }

        stage('Test') {
            when {
                branch 'master'  // Запуск тестов только для ветки main
            }
            steps {
                script {
                    try {
                        // Запуск тестов
                        echo "Запуск тестов для версии ${params.APP_VERSION}"
                    
                    } catch (Exception e) {
                        currentBuild.result = 'FAILURE'
                        throw e  // Обработка ошибки
                    }
                }
            }
        }

        stage('Deploy') {
            when {
                allOf {
                    branch 'master'  // Разворачиваем только для ветки main
                    environment name: 'ENVIRONMENT', value: 'production'  // Разворачиваем только в продакшн
                }
            }
            steps {
                script {
                    try {
                        // Развертывание приложения в зависимости от выбранного окружения
                        echo "Деплой версии ${params.APP_VERSION} в окружение ${params.ENVIRONMENT}"
                        if (params.ENVIRONMENT == 'production') {
                            sh 'cd docker-webapp-django'
                            sh 'docker-compose up'
                        } else {
                            sh 'cd docker-webapp-django'
                            sh 'docker-compose up'
                        }
                    } catch (Exception e) {
                        currentBuild.result = 'FAILURE'
                        throw e  // Обработка ошибки
                    }
                }
            }
        }
        stage('Check application') {
        steps {
            sh 'curl http://localhost:8080'
        }
    }
    }

    post {
        success {
            echo 'Pipeline завершен успешно!'
        }
        failure {
            echo 'Pipeline завершился с ошибкой.'
        }
    }
}
